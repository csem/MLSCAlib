Search.setIndex({"docnames": ["MLSCAlib", "MLSCAlib.Architectures", "MLSCAlib.Attacks", "MLSCAlib.Ciphers", "MLSCAlib.Data", "index", "modules"], "filenames": ["MLSCAlib.rst", "MLSCAlib.Architectures.rst", "MLSCAlib.Attacks.rst", "MLSCAlib.Ciphers.rst", "MLSCAlib.Data.rst", "index.rst", "modules.rst"], "titles": ["MLSCAlib package", "MLSCAlib.Architectures package", "MLSCAlib.Attacks package", "MLSCAlib.Ciphers package", "MLSCAlib.Data package", "Welcome to MLSCAlib\u2019s documentation!", "MLSCAlib"], "terms": {"architectur": [0, 6], "autoencod": [0, 4, 6], "old_cnn": [0, 1], "torch_model": [0, 6], "agnosticmodel": [0, 1], "forward": [0, 1, 4], "set_dim": [0, 1], "train": [0, 1, 2, 4], "cnn_mpp16": [0, 1], "cnnexp": [0, 1], "mcnn": [0, 1], "mlp": [0, 1, 2], "mlp_aesrd": [0, 1], "mlp_ascad": [0, 1], "mlpexp": [0, 1], "eval": [0, 1], "maskinglay": [0, 1], "__init__": [0, 1, 2, 3, 4], "meshnn": [0, 1, 2], "netaeshd": [0, 1], "resnet": [0, 1], "simple_aes_rd": [0, 1], "vgg16": [0, 1], "vggnois": [0, 1], "attack": [0, 1, 3, 4, 6], "attack_byt": [0, 2], "attack_kei": [0, 2], "get_g": [0, 2], "get_ge_from_sensit": [0, 2], "get_accuraci": [0, 2], "get_fast_g": [0, 2], "get_keys_from_proba": [0, 2], "get_keys_from_sensit": [0, 2], "get_pruning_percentag": [0, 2], "get_sensitivity_tensor": [0, 2], "set_pruning_percentag": [0, 2], "set_se": [0, 2, 4], "train_model_default": [0, 2], "train_model_prun": [0, 2], "turn_output_probas_to_key_proba": [0, 2], "sensitivitymod": [0, 2], "absolute_valu": [0, 2], "classic": [0, 2], "grad_cam": [0, 2], "grad_cam_plus_plu": [0, 2], "on_raw_trac": [0, 2], "trainingmethod": [0, 2], "adversari": [0, 2], "cross_valid": [0, 2], "custom": [0, 1, 2, 4], "default": [0, 1, 2, 3, 4], "mixup": [0, 2], "pruning_glob": [0, 2], "pruning_half_epochs_glob": [0, 2], "pruning_half_epochs_loc": [0, 2], "pruning_loc": [0, 2], "unprofil": [0, 6], "attack_byte_with_min_trac": [0, 2], "attack_bytes_with_min_trac": [0, 2], "train_model_adversari": [0, 2], "train_model_cross_valid": [0, 2], "display_sensi_slid": [0, 2], "profil": [0, 1, 3, 4, 6], "get_min_trace_for_ge1": [0, 2], "record_attack": [0, 2], "cipher": [0, 2, 6], "aes_leakag": [0, 6], "aesleakagemodel": [0, 3], "check_kei": [0, 3], "get_imbalanced_class": [0, 3], "get_labelled_output": [0, 3], "get_snr_poi": [0, 3], "get_used_kei": [0, 3], "needs_cipher_and_not_ptx": [0, 3], "recover_input": [0, 3], "leakage_model": [0, 2, 4, 6], "leakagemodel": [0, 2, 3, 4], "get_class_bal": [0, 3], "get_class": [0, 3], "get_same_label_valu": [0, 3], "get_small_profiling_label": [0, 3], "get_typ": [0, 3], "is_id": [0, 3], "is_balanc": [0, 3], "label": [0, 2, 3, 4], "recover_key_byte_hypothesi": [0, 3], "data": [0, 2, 6], "chipwhisperer_convert": [0, 6], "mockproj": [0, 4], "mockproj2": [0, 4], "save_chip_trace_to_h5": [0, 4], "data_manag": [0, 2, 6], "datamanag": [0, 2, 4], "get_check_data": [0, 4], "get_n": [0, 4], "get_res_nam": [0, 2, 4], "n": [0, 1, 2, 4], "prepare_profiled_data": [0, 4], "prepare_unprofiled_data": [0, 4], "set_devic": [0, 4], "tensor_to_numpi": [0, 4], "get_a_free_gpu": [0, 4], "custom_manag": [0, 6], "customdatamanag": [0, 2, 4], "add_nois": [0, 4], "append_nois": [0, 4], "apply_lda": [0, 4], "apply_ma": [0, 4], "apply_pca": [0, 4], "apply_qda": [0, 4], "apply_autoencod": [0, 4], "apply_decim": [0, 4], "apply_mean_remov": [0, 4], "apply_messerg": [0, 4], "apply_pearson": [0, 4], "use_synthetic_trac": [0, 4], "imbalanceresolut": [0, 4], "ncr_smote": [0, 4], "neighbourhood_cleaning_rul": [0, 4], "none": [0, 1, 2, 3, 4], "onesided_select": [0, 4], "oss_smot": [0, 4], "random_undersampl": [0, 4], "smote": [0, 3, 4], "smote_tomek": [0, 4], "noisetyp": [0, 4], "clock_jitt": [0, 4], "gaussian": [0, 1, 2, 4], "ma": [0, 4], "random_delai": [0, 4], "shuffl": [0, 4], "shuffling_vari": [0, 4], "thi": [0, 1, 2, 3, 4], "script": [], "run": [1, 2], "ml": 2, "ae": [1, 2, 3], "script_pars": [0, 6], "user_input": 0, "pars": 0, "us": [0, 1, 2, 3, 4], "input": [0, 1, 2, 3, 4], "argument": [0, 1, 2], "creat": [0, 1, 2, 4], "class": [0, 1, 2, 3, 4], "lr": 1, "input_length": 1, "from": [1, 2, 4], "wu": [1, 4], "picek": [1, 3, 4], "1": [1, 2, 3, 4], "The": [1, 2, 3, 4], "length": 1, "must": 1, "have": [0, 1, 2, 3, 4], "been": [1, 2, 4], "pad": 1, "multipl": [1, 2], "20": [1, 4], "lichao": [1, 4], "stjepan": [1, 3, 4], "remov": [1, 2, 4], "some": [1, 2, 4], "nois": [1, 2, 4], "pre": [1, 4], "process": [1, 2, 4], "side": [1, 2, 3, 4], "channel": [1, 2, 3, 4], "measur": [1, 4], "iacr": [1, 2, 3, 4], "transact": [1, 2, 3, 4], "cryptograph": [1, 2, 3, 4], "hardwar": [1, 2, 3, 4], "embed": [1, 2, 3, 4], "system": [1, 2, 3, 4], "page": [1, 4, 5], "389": [1, 4], "415": [1, 4], "2020": [1, 4], "num_class": 1, "dk": [1, 2, 4], "fals": [1, 2, 4], "noise_std": 1, "dim": [1, 2], "0": [1, 2, 3, 4], "base": [1, 2, 3, 4], "x": [1, 2], "class_ix": 1, "defin": [1, 2], "comput": [1, 2, 3, 4], "perform": [1, 2, 4], "everi": [1, 4], "call": [1, 2, 4], "should": [0, 1, 2, 3, 4], "overridden": 1, "all": [1, 2, 3, 4], "subclass": 1, "although": 1, "recip": 1, "pass": 1, "need": [1, 2, 3, 4], "within": 1, "function": [1, 2, 3, 4], "one": [1, 2, 4], "instanc": 1, "afterward": 1, "instead": [1, 2, 3], "sinc": [1, 3], "former": 1, "take": [1, 2, 4], "care": 1, "regist": 1, "hook": 1, "while": 1, "latter": 1, "silent": 1, "ignor": [1, 4], "them": [1, 2, 4], "bool": [1, 2, 3, 4], "neural": [1, 4], "network": [1, 2, 4], "propos": 1, "maghrebi": 1, "et": [1, 2, 3, 4], "al": [1, 2, 3, 4], "2": [1, 2, 3, 4], "break": 1, "ascad": 1, "without": [0, 1, 2, 3, 4], "desyncron": 1, "techniqu": [1, 2, 3, 4], "houssem": 1, "thibault": 1, "portigliatti": 1, "emmanuel": 1, "prouff": 1, "implement": [1, 2, 3, 4], "deep": [1, 2], "learn": [1, 2, 3, 4], "12": [1, 2], "2016": 1, "doi": [1, 2, 3, 4], "10": [1, 2, 3, 4], "1007": 1, "978": 1, "3": [0, 1, 2, 3, 4], "319": 1, "49445": 1, "6_1": [], "paramet": [1, 2, 3, 4], "int": [1, 2, 3, 4], "number": [1, 2, 3, 4], "depend": [1, 3], "leakag": [1, 3, 4], "model": [1, 2, 3, 4], "sampl": [1, 3, 4], "per": [1, 4], "trace": [1, 2, 3, 4], "whether": [1, 2, 3, 4], "domain": [1, 2, 4], "knowledg": [1, 2, 4], "neuron": [1, 2, 4], "float": [1, 2, 4], "standard": [1, 2, 4], "deviat": 1, "add": [1, 2, 4], "If": [0, 1, 2, 3, 4], "set": [1, 2, 3, 4], "won": [1, 4], "t": [1, 2, 3, 4], "output": [1, 2, 3, 4], "proba": 1, "batch": [1, 2, 4], "each": [1, 2, 3, 4], "separ": [1, 2], "timon": [1, 2], "benjamin": [1, 2], "non": [1, 2, 3, 4], "sensit": [1, 2], "analysi": [1, 2, 4], "2019": [1, 2, 3, 4], "107": [1, 2, 4], "131": [1, 2], "februari": [1, 2], "url": [1, 2, 3, 4], "http": [0, 1, 2, 3, 4], "tche": [1, 2, 3, 4], "org": [0, 1, 2, 3, 4], "index": [1, 2, 4, 5], "php": [1, 2], "articl": [1, 2], "view": [1, 2], "7387": [1, 2], "13154": [1, 2, 3, 4], "v2019": [1, 2, 3, 4], "i2": [1, 2], "third_process": 1, "pca": [1, 4], "multi": 1, "scale": [1, 4], "convolut": 1, "inspir": [1, 4], "github": [1, 4], "com": [1, 4], "mitmath": 1, "sca": [1, 2], "4": [1, 2, 4], "5": [1, 2, 4], "includ": [1, 2], "preprocess": [0, 1, 2, 4], "step": [1, 2, 4], "insid": [1, 2], "work": [1, 3, 4], "well": [1, 3], "ani": [0, 1, 2, 3, 4], "kind": 1, "yoo": 1, "seung": 1, "xiaolu": 1, "hou": 1, "dirmanto": 1, "jap": 1, "jakub": 1, "breier": 1, "shivam": [1, 3, 4], "bhasin": [1, 3, 4], "back": [1, 2], "basic": [1, 4], "seamless": 1, "integr": 1, "ieee": 1, "inform": [1, 2, 3, 4], "forens": 1, "secur": [1, 2], "16": [1, 2, 3], "3215": 1, "3227": 1, "2021": [1, 2], "1109": 1, "tif": 1, "3076928": 1, "kuroda": [1, 2], "6": [1, 4], "unprotect": 1, "kunihiro": [1, 2], "yuta": [1, 2], "fukuda": [1, 2], "kota": [1, 2], "yoshida": [1, 2], "takeshi": [1, 2], "fujino": [1, 2], "practic": [1, 2], "aspect": [1, 2], "against": [1, 2], "softwar": [0, 1, 2, 3, 4], "two": [1, 2, 4], "type": [1, 2, 3, 4], "mask": [1, 2, 3, 4], "countermeasur": [1, 2, 3, 4], "rsm": [1, 2], "In": [1, 2, 3, 4], "proceed": [1, 2], "5th": [1, 2], "workshop": [1, 2], "solut": [1, 2], "ash": [1, 2], "21": [1, 2], "29": [1, 2, 3, 4], "40": [1, 2], "new": [1, 2, 4], "york": [1, 2], "ny": [1, 2], "usa": [1, 2], "associ": [1, 2], "machineri": [1, 2], "1145": [1, 2], "3474376": [1, 2], "3487285": [1, 2], "weissbart": 1, "7": [1, 2], "aes_rd": 1, "dataset": [1, 2, 4], "l": 1, "\u00e9": 1, "o": [1, 3, 4], "multilay": 1, "perceptron": 1, "lectur": 1, "note": [1, 2, 4], "scienc": 1, "198": 1, "216": 1, "springer": [1, 4], "intern": [1, 4], "publish": [0, 1, 2, 3, 4], "030": 1, "61638": 1, "0_12": [], "k": [1, 4], "stride": 1, "number_of_poi": 1, "first_step": 1, "01": 1, "next_step": 1, "first_epoch": 1, "experiment": 1, "window": [1, 2, 4], "size": [1, 2, 4], "look": [1, 2], "simultan": 1, "layer": [1, 2], "how": [1, 2, 4], "much": [1, 2, 4], "i": [0, 1, 2, 3, 4], "overlap": 1, "numer_of_poi": 1, "mani": [1, 2, 4], "point": [1, 4], "interest": [1, 4], "suppos": 1, "contain": [1, 2, 4], "stop": [1, 2], "prune": [1, 2], "until": [1, 2, 4], "onli": [1, 2, 3, 4], "ar": [1, 2, 3, 4], "activ": 1, "100": [1, 2, 4], "what": [1, 2], "percentag": [1, 2], "remain": [1, 2], "node": 1, "disabl": [1, 2, 3], "first": [1, 2, 4], "follow": [1, 4], "epoch": [1, 2, 4], "At": 1, "which": [1, 2, 3, 4], "begin": [1, 4], "too": [1, 2], "small": [1, 2], "mai": [1, 2, 3, 4], "accident": 1, "useful": 1, "size_in": 1, "size_out": 1, "linear": 1, "ha": [1, 2, 4], "self": [1, 2, 4], "regular": [1, 2, 4], "It": [1, 2, 4], "constant": 1, "tune": 1, "init": 1, "previou": [1, 2], "had": 1, "also": [1, 2, 4], "connect": 1, "shoudl": 1, "quantiti": 1, "rais": [1, 2, 3], "assertionerror": 1, "when": [1, 2, 3, 4], "bool_": 1, "mode": 1, "effect": [1, 4], "certain": 1, "see": [0, 1, 2, 3, 4], "document": 1, "particular": [0, 1, 2, 3, 4], "detail": [0, 1, 2, 3, 4], "behavior": 1, "evalu": [1, 3, 4], "thei": 1, "affect": 1, "e": [1, 2, 4], "g": [1, 2, 4], "dropout": 1, "batchnorm": 1, "etc": 1, "arg": 1, "true": [1, 2, 3, 4], "return": [1, 2, 3, 4], "batch_siz": [1, 2, 4], "first_model": 1, "cnn_exp": 1, "num_neurons_middl": 1, "first_bottleneck_size_per_class": 1, "second_bottleneck_size_per_class": 1, "first_activ": 1, "selu": 1, "mesh": 1, "allow": [1, 2, 4], "fine": 1, "bottleneck": 1, "present": 1, "meshv1": 1, "being": [1, 2, 4], "previous": 1, "wa": [1, 2, 4], "repres": [1, 2, 3], "can": [0, 1, 2, 3, 4], "now": 1, "increas": [1, 2, 4], "next": [1, 2], "inner": [1, 4], "could": [1, 3], "rememb": 1, "target": [1, 2, 3, 4], "": [1, 2, 3, 4], "respect": [1, 2], "weight": [1, 2, 3], "anoth": 1, "we": [1, 2], "henc": [1, 2], "meshnn4": 1, "same": [1, 2, 3, 4], "AND": 1, "test": [1, 4], "str": [1, 2, 3, 4], "torch": [1, 2, 4], "nn": [1, 2], "you": [0, 1, 2, 3, 4], "give": [1, 2], "an": [1, 2, 3, 4], "exist": [1, 4], "case": [1, 2, 3, 4], "replac": [1, 4], "logsoftmax": 1, "pretrain": 1, "given": [1, 2, 3, 4], "trainabl": 1, "put": [1, 2], "hidden": 1, "middl": 1, "assign": 1, "By": [1, 2], "One": [1, 3], "correspond": [1, 2, 3, 4], "probabl": [1, 2], "second": [1, 2, 4], "combin": [1, 2], "over": [1, 2, 3], "softmax": [1, 2], "ofth": 1, "mean": [1, 2, 3, 4], "bossuet": 1, "venelli": 1, "8": [1, 2, 4], "aes_hd": 1, "zaid": 1, "habrard": 1, "methodologi": 1, "effici": [1, 4], "cnn": 1, "novemb": 1, "8391": 1, "v2020": 1, "i1": [1, 3, 4], "36": 1, "num_block": 1, "bursztein": 1, "picod": 1, "9": 1, "avail": [1, 2, 3, 4], "here": [1, 4], "other": [1, 2], "eli": 1, "jean": 1, "michel": 1, "A": [0, 1, 2, 3, 4], "hacker": 1, "guid": 1, "def": 1, "con": 1, "editor": [1, 4], "27": 1, "scaaml": 1, "assist": 1, "machin": [1, 3, 4], "googl": 1, "simplifi": 1, "wouter": 1, "11": [1, 2], "lennert": 1, "victor": 1, "arriba": 1, "benedikt": 1, "gierlich": 1, "bart": 1, "preneel": 1, "revisit": 1, "147": 1, "168": 1, "vgg": 1, "taken": 1, "kim": 1, "recommend": 1, "l2": [1, 2], "reg": 1, "valu": [1, 2, 3, 4], "author": [1, 4], "jaehun": 1, "anneli": [1, 3, 4], "heuser": [1, 3, 4], "alan": [1, 3, 4], "hanjal": 1, "make": [1, 2, 4], "unleash": 1, "power": [1, 2, 4], "148": 1, "179": 1, "8292": 1, "i3": 1, "model_nam": 2, "loss": 2, "optim": [2, 4], "verbos": [2, 4], "lambda": 2, "seed": [2, 4], "results_path": 2, "info": [2, 4], "threshold": 2, "lr_schedul": 2, "abc": [2, 3], "chosen": 2, "initi": [2, 4], "dure": [2, 4], "mse": 2, "cross_entropi": 2, "nlll": 2, "adam": 2, "sgd": 2, "print": [2, 4], "out": 2, "execut": 2, "result": [2, 4], "differ": [2, 3, 4], "metric": [1, 2, 3, 4], "time": [2, 4], "accuraci": 2, "debug": 2, "list": [2, 3, 4], "specifi": [2, 4], "l1": 2, "term": [0, 1, 2, 3, 4], "03": 2, "whose": 2, "name": [2, 4], "regularized_function_1": 2, "regularized_function_": 2, "those": [2, 4], "plaintext": [2, 3, 4], "part": 2, "doesn": [2, 3], "handl": [2, 4], "anyth": [2, 4], "relat": [2, 3], "where": [2, 4], "store": [2, 4], "plot": 2, "method": 2, "text": 2, "insert": 2, "file": [2, 4], "On": [1, 2, 4], "dimens": 2, "axi": 2, "appli": [1, 2, 4], "filter": [2, 4], "certainti": 2, "higher": [2, 4], "than": [2, 3, 4], "assum": 2, "guess": [2, 3, 4], "correct": [2, 3], "To": [1, 2, 3, 4], "blind": [2, 4], "rate": 2, "schedul": 2, "after": [2, 4], "multipli": [2, 4], "abstract": [2, 3], "byte": [2, 3, 4], "launch": 2, "full": 2, "Will": 2, "termin": 2, "harder": 2, "ge": [2, 4], "entropi": 2, "byte_rang": 2, "key_rank": 2, "kei": [2, 3, 4], "order": [2, 4], "decreas": 2, "key_certainti": 2, "estim": 2, "timeout": 2, "7200": 2, "reuse_this_key_proba": 2, "real": 2, "whole": 2, "best": 2, "effort": 2, "brute": 2, "forc": 2, "search": [2, 5], "find": [2, 4], "ciphertext": [2, 3, 4], "path": [2, 4], "npy": 2, "rang": 2, "static": [2, 4], "output_proba_on_kei": 2, "key_byt": 2, "gues": 2, "sort": 2, "secret": 2, "right": 2, "end": [2, 4], "pred": 2, "get": [2, 3], "predict": 2, "distribut": [0, 1, 2, 3, 4], "categor": [2, 4], "form": 2, "plaintext_attack": 2, "fast_siz": 2, "500": 2, "fat": 2, "consid": [2, 4], "subset": [2, 3], "tensorflow": 2, "kera": 2, "valid": [2, 4], "maximum": 2, "rank": 2, "deriv": 2, "attributeerror": 2, "do": 2, "requires_grad": 2, "tensor": [2, 3, 4], "accord": [2, 4], "fix": [2, 4], "random": [2, 4], "compon": [2, 4], "reproduc": 2, "kwarg": 2, "x_prof": [2, 4], "label_prof": 2, "x_prof_val": 2, "label_prof_v": 2, "plaintext_prof_v": 2, "mask_val": 2, "get_metr": 2, "fast": [2, 4], "sensi_reg": 2, "fast_sensi": 2, "lth": 2, "shape": [2, 3], "na": [2, 4], "re": [2, 4], "insta": 2, "calcul": [2, 3, 4], "induc": 2, "additionn": 2, "delai": [2, 4], "output_proba": 2, "byte_posit": [2, 3], "turn": [2, 4], "huge": 2, "multiprocess": 2, "probabilit": 2, "x_attack": [2, 4], "to_categor": 2, "y_train": 2, "error": [2, 3], "went": 2, "through": 2, "gpu": [2, 4], "memori": [2, 4], "cpu": [2, 4], "via": [2, 4], "numpi": [2, 4], "parallel": 2, "exhaust": 2, "enum": [2, 4], "enumer": [2, 4], "done": [2, 4], "entir": 2, "half": 2, "wise": 2, "15": [2, 4], "hw": [2, 3], "sbox": [2, 3], "0008": 2, "split_non_profiling_attack_set": 2, "sensitivity_mod": 2, "force_cpu": [2, 4], "remove_mask": [2, 4], "state": [2, 4], "_statemachin": 2, "creation": [2, 4], "file_name_attack": [2, 4], "h5": [2, 4], "file_name_profil": [2, 4], "databases_path": [2, 4], "databas": [1, 2, 4], "has_countermeasur": [2, 4], "_poi": 2, "_n": 2, "nt": [2, 4], "f": [2, 4], "check_data": 2, "devic": [2, 4], "cuda": 2, "plotsresult": 2, "50": [1, 2, 4], "5437": [2, 4], "plan": 2, "avoid": [2, 4], "algorithm": 2, "choos": 2, "pruning_half_epoch": 2, "guess_list": 2, "256": [2, 4], "display_sensi_hist": 2, "split_rat": [2, 4], "88": [2, 4], "compar": 2, "prompt": 2, "tieh": 2, "histori": 2, "across": 2, "discard": [2, 4], "warn": 2, "carefulli": 2, "deprec": 2, "describ": [2, 4], "resp": 2, "equal": [2, 4], "guess_rang": 2, "14": [1, 2], "most": [2, 3, 4], "difficult": 2, "label_attack": 2, "x_attack_v": 2, "label_attack_v": 2, "plaintext_attack_v": 2, "key_guess": [2, 4], "gradual": 2, "want": [2, 4], "again": 2, "slow": 2, "down": 2, "sue": 2, "spike": 2, "Not": 2, "yet": 2, "arrai": [2, 4], "sum": 2, "empti": 2, "fast_g": 2, "train_acc": 2, "sensi_slid": 2, "evolut": 2, "sensitivities_slid": 2, "displai": 2, "interact": 2, "w": [2, 3, 4], "r": [1, 2], "accumul": 2, "id": [2, 3], "acquir": 2, "clone": 2, "known": 2, "ptx": [2, 3], "get_output_proba": 2, "95": [2, 4], "anywai": 2, "scenario": 2, "rest": 2, "useless": 2, "even": [0, 1, 2, 3, 4], "appear": 2, "pdf": 2, "peak": [2, 3], "otherwis": [2, 3, 4], "minimum": [2, 4], "amount": 2, "reach": [2, 4], "possibl": [2, 3, 4], "demand": [2, 4], "res_key_proba": 2, "min_ge1": 2, "requir": 2, "iter": 2, "more": [0, 1, 2, 3, 4], "meaningful": 2, "between": [2, 4], "trial": 2, "number_of_tri": 2, "info_for_filenam": 2, "info_for_plot": 2, "x_axi": 2, "redraw_thi": 2, "legend_loc": 2, "display_titl": [], "target_model_substr": 2, "target_model_without_substr": 2, "ncol": 2, "custom_palett": 2, "logit": 2, "replace_legend": 2, "font_siz": 2, "file_extens": 2, "graph": 2, "along": [0, 1, 2, 3, 4], "confid": 2, "interv": 2, "folder": 2, "directori": [2, 4], "temporari": 2, "fast_ge_epoch": 2, "user": [2, 4], "twice": 2, "line": 2, "addit": [2, 4], "ad": [2, 4], "draw": 2, "incorrect": 2, "titl": 2, "current": [2, 4], "alwai": [2, 3], "stai": 2, "record": 2, "gener": [0, 1, 2, 3, 4], "provid": 2, "determin": 2, "specif": [2, 3, 4], "identifi": 2, "uniqu": 2, "lead": [2, 3], "singl": 2, "iff": [2, 3], "legend": 2, "alongsid": 2, "exampl": [2, 3, 4], "vari": 2, "either": [0, 1, 2, 3, 4], "epoch_sensi": 2, "thex": 2, "increment": [2, 4], "chang": [2, 4], "For": [2, 3, 4], "2400": 2, "just": [2, 4], "becaus": 2, "pure": 2, "luck": 2, "few": 2, "wrong": 2, "seen": 2, "produc": [2, 3], "y": [2, 4], "highest": [2, 3], "wish": 2, "exact": 2, "automat": [2, 4], "infer": 2, "bottom": 2, "upper": 2, "left": 2, "absent": 2, "upon": 4, "column": 2, "spread": 2, "figur": 2, "save": [2, 4], "palett": 2, "mx3": 2, "m": 2, "select": 2, "color": 2, "rgb": 2, "element": 2, "mention": 2, "font": 2, "extens": 2, "png": 2, "svg": 2, "jpeg": 2, "target_model_": 2, "_substr": 2, "consol": 2, "cross": 2, "x_profil": 2, "label_profil": 2, "x_valid": 2, "label_valid": 2, "plaintext_v": 2, "key_attack": 2, "vlidat": 2, "leakage_loc": 3, "ecb": 3, "encapsul": 3, "tool": 3, "necessari": 3, "recov": 3, "instanti": 3, "lsb": 3, "msb": 3, "hw2": 3, "addroundkei": 3, "lastsbox": 3, "check": 3, "ptx_i": 3, "key_i": 3, "mask_i": 3, "locat": 3, "th": 3, "traces_wav": 3, "posit": 3, "snr": [3, 4], "usual": 3, "round": 3, "sub": [3, 4], "plain": 3, "privat": 3, "round_kei": 3, "know": 3, "label_i": 3, "tailor": [3, 4], "hw3": 3, "unimpl": 3, "1d": 3, "counter": [3, 4], "imbal": [1, 3, 4], "balanc": [3, 4], "chawla": 3, "jovic": [1, 3, 4], "francesco": [1, 3, 4], "regazzoni": [1, 3, 4], "curs": [1, 3, 4], "conflict": [1, 3, 4], "august": [1, 3, 4], "hal": [1, 3, 4], "inria": [1, 3, 4], "fr": [1, 3, 4], "01935318": [1, 3, 4], "209": [1, 3, 4], "237": [1, 3, 4], "nitesh": 3, "v": 3, "kevin": 3, "bowyer": 3, "lawrenc": 3, "hall": 3, "philip": 3, "kegelmey": 3, "synthet": [3, 4], "minor": [3, 4], "journal": [1, 3], "artifici": 3, "intellig": 3, "research": [3, 4], "321": 3, "357": 3, "2002": 3, "guessed_label": 3, "byte_po": 3, "xor": 3, "255": 3, "pair": [3, 4], "ident": 3, "before_output": 3, "gien": 3, "plaintext_i": 3, "likelihood": 3, "pickle_path_fil": 4, "object": 4, "proj": 4, "14000": 4, "datasets_root_fold": 4, "profiling_key_typ": 4, "fresh": 4, "ceil": 4, "chipwhisper": 4, "project": 4, "oper": 4, "high": 4, "ram": 4, "usag": 4, "structur": 4, "profiling_trac": 4, "metadata": 4, "attack_trac": 4, "offset": 4, "string": [2, 4], "filenam": 4, "descript": 4, "assert": 4, "integ": 4, "prepar": 4, "fly": 4, "doe": 4, "center": 4, "sure": 4, "poi": 4, "act": 4, "like": 4, "option": [0, 1, 2, 3, 4], "format": 4, "underli": 4, "counteremasur": 4, "attribut": 4, "further": 4, "fulli": 4, "ommit": 4, "properti": 4, "use_attack_as_v": 4, "split": 4, "ratio": 4, "split_val": 4, "min_id": 4, "max_id": 4, "load": 4, "transform": 4, "binari": 4, "reshap": 4, "hypotet": 4, "distinct": 4, "tranin": 4, "reset": 4, "start": 4, "_": 4, "newse": 4, "setter": 4, "free": [0, 1, 2, 3, 4], "abl": 4, "carri": 4, "clean_file_nam": 4, "overwrit": 4, "imbalance_resolut": 4, "sampling_strategi": 4, "auto": 4, "shuffling_level": 4, "clock_rang": 4, "delay_amplitud": 4, "gaussian_nois": 4, "noisy_file_nam": 4, "manag": 4, "clean": 4, "word": 4, "refer": 4, "thing": 4, "addition": 4, "try": 4, "combat": 4, "issu": 4, "moreov": 4, "lda": 4, "qda": 4, "decim": 4, "messerg": 4, "explan": 4, "fsm": 4, "statemachin": 4, "go": 4, "prepare_x_data": 4, "accept": 4, "reason": 4, "prepare_data": 4, "don": 4, "queri": 4, "allwai": 4, "onc": 4, "noise_finish_usage_in_attack": 4, "file_nam": 4, "compos": 4, "origin": 4, "plu": 4, "remove_nois": 4, "were": 4, "denois": 4, "aisylab": 4, "partit": 4, "imbalanc": [1, 4], "undersampl": 4, "major": 4, "rare": 4, "neighbor": 4, "caution": 4, "callabl": 4, "downsampl": 4, "strategi": 4, "resampl": 4, "choic": 4, "equival": 4, "dict": 4, "desir": 4, "intens": 4, "swap": 4, "clock": 4, "jitter": 4, "big": 4, "zero": 4, "noisi": 4, "As": 4, "purpos": [0, 1, 2, 3, 4], "yourself": 4, "your": [0, 1, 2, 3, 4], "noise_typ": 4, "size_ratio": 4, "append": 4, "longer": 4, "comparison": 4, "actual": 4, "doubl": 4, "lineardiscriminantanalysi": 4, "befor": 4, "stage": 4, "window_s": 4, "step_siz": 4, "move": 4, "averag": 4, "nb_compon": 4, "225": 4, "princip": 4, "retain": 4, "quadraticdiscriminantanalysi": 4, "128": 4, "path_to_reuse_autoencod": 4, "never": 4, "reduc": 4, "il": 4, "reus": 4, "old": 4, "tri": 4, "32": 4, "64": 4, "inclus": 4, "downsampling_factor": 4, "factor": 4, "martinasek": 4, "zdenek": 4, "jan": 4, "hajni": 4, "luka": 4, "malina": 4, "confer": 4, "smart": 4, "card": 4, "advanc": 4, "applic": 4, "94": 4, "2013": 4, "thoma": 4, "dpa": 4, "resist": 4, "\u00e7": 4, "etin": 4, "ko": 4, "christof": 4, "paar": 4, "che": 4, "2000": 4, "238": 4, "251": 4, "berlin": 4, "heidelberg": 4, "import": 4, "request": 4, "beforehand": 4, "ones": 4, "resolut": 4, "help": 4, "stabl": 4, "html": 4, "tomek": 4, "packag": [5, 6], "modul": [5, 6], "subpackag": 6, "submodul": 6, "main": 6, "cnn_zaid_desync0": [0, 1], "cnn_zaid_desync100": [0, 1], "cnn_zaid_desync50": [0, 1], "cnnbest": [0, 1], "mlp_aesrd_imb": [0, 1], "noconv_desync0": [0, 1], "noconv_desync100": [0, 1], "noconv_desync50": [0, 1], "pre_process_data": [0, 4], "horizontal_standard": [0, 2, 4], "remove_mean_scale_0_1": [0, 4], "remove_mean_scale_1_1": [0, 4], "scale_0_1": [0, 4], "scale_1_1": [0, 4], "copyright": [0, 1, 2, 3, 4], "c": [0, 1, 2, 3, 4], "2025": [0, 1, 2, 3, 4], "csem": [0, 1, 2, 3, 4], "program": [0, 1, 2, 3, 4], "redistribut": [0, 1, 2, 3, 4], "modifi": [0, 1, 2, 3, 4], "under": [0, 1, 2, 3, 4], "gnu": [0, 1, 2, 3, 4], "public": [0, 1, 2, 3, 4], "licens": [0, 1, 2, 3, 4], "foundat": [0, 1, 2, 3, 4], "version": [0, 1, 2, 3, 4], "later": [0, 1, 2, 3, 4], "hope": [0, 1, 2, 3, 4], "warranti": [0, 1, 2, 3, 4], "impli": [0, 1, 2, 3, 4], "merchant": [0, 1, 2, 3, 4], "fit": [0, 1, 2, 3, 4], "FOR": [0, 1, 2, 3, 4], "receiv": [0, 1, 2, 3, 4], "copi": [0, 1, 2, 3, 4], "www": [0, 1, 2, 3, 4], "privaci": 1, "cryptographi": 1, "engin": 1, "26": 1, "_1": 1, "gabriel": 1, "lilian": 1, "amauri": 1, "alexandr": 1, "desync": 1, "benadjila": 1, "ryad": 1, "mi": 1, "strullu": 1, "eleonora": 1, "cagli": 1, "cile": 1, "duma": 1, "introduct": 1, "163": 1, "188": 1, "s13389": 1, "019": 1, "00220": 1, "_12": 1, "relu": 1, "25": 1, "13": 1, "learning_r": 2, "pre_process": [2, 4], "overwrite_titl": 2, "font_weight": 2, "normal": 2, "bold": 2, "light": 2}, "objects": {"MLSCAlib.Architectures": [[1, 0, 0, "-", "autoencoders"], [1, 0, 0, "-", "torch_models"]], "MLSCAlib.Architectures.autoencoders": [[1, 1, 1, "", "old_cnn"]], "MLSCAlib.Architectures.torch_models": [[1, 2, 1, "", "AgnosticModel"], [1, 2, 1, "", "CNN_MPP16"], [1, 2, 1, "", "CNN_zaid_desync0"], [1, 2, 1, "", "CNN_zaid_desync100"], [1, 2, 1, "", "CNN_zaid_desync50"], [1, 2, 1, "", "CNNbest"], [1, 2, 1, "", "CNNexp"], [1, 2, 1, "", "MCNN"], [1, 2, 1, "", "MLP"], [1, 2, 1, "", "MLP_AESRD"], [1, 2, 1, "", "MLP_AESRD_IMB"], [1, 2, 1, "", "MLP_ASCAD"], [1, 2, 1, "", "MLPexp"], [1, 2, 1, "", "MaskingLayer"], [1, 2, 1, "", "MeshNN"], [1, 2, 1, "", "NetAeshd"], [1, 2, 1, "", "NoConv_desync0"], [1, 2, 1, "", "NoConv_desync100"], [1, 2, 1, "", "NoConv_desync50"], [1, 2, 1, "", "ResNet"], [1, 2, 1, "", "Simple_AES_RD"], [1, 2, 1, "", "VGG16"], [1, 2, 1, "", "VGGNoise"]], "MLSCAlib.Architectures.torch_models.AgnosticModel": [[1, 3, 1, "", "forward"], [1, 3, 1, "", "set_dim"], [1, 4, 1, "", "training"]], "MLSCAlib.Architectures.torch_models.CNN_MPP16": [[1, 3, 1, "", "forward"], [1, 3, 1, "", "set_dim"], [1, 4, 1, "", "training"]], "MLSCAlib.Architectures.torch_models.CNN_zaid_desync0": [[1, 3, 1, "", "forward"], [1, 3, 1, "", "set_dim"], [1, 4, 1, "", "training"]], "MLSCAlib.Architectures.torch_models.CNN_zaid_desync100": [[1, 3, 1, "", "forward"], [1, 3, 1, "", "set_dim"], [1, 4, 1, "", "training"]], "MLSCAlib.Architectures.torch_models.CNN_zaid_desync50": [[1, 3, 1, "", "forward"], [1, 3, 1, "", "set_dim"], [1, 4, 1, "", "training"]], "MLSCAlib.Architectures.torch_models.CNNbest": [[1, 3, 1, "", "forward"], [1, 3, 1, "", "set_dim"], [1, 4, 1, "", "training"]], "MLSCAlib.Architectures.torch_models.CNNexp": [[1, 3, 1, "", "forward"], [1, 3, 1, "", "set_dim"], [1, 4, 1, "", "training"]], "MLSCAlib.Architectures.torch_models.MCNN": [[1, 3, 1, "", "forward"], [1, 3, 1, "", "set_dim"], [1, 4, 1, "", "training"]], "MLSCAlib.Architectures.torch_models.MLP": [[1, 3, 1, "", "forward"], [1, 3, 1, "", "set_dim"], [1, 4, 1, "", "training"]], "MLSCAlib.Architectures.torch_models.MLP_AESRD": [[1, 3, 1, "", "forward"], [1, 3, 1, "", "set_dim"], [1, 4, 1, "", "training"]], "MLSCAlib.Architectures.torch_models.MLP_AESRD_IMB": [[1, 3, 1, "", "forward"], [1, 3, 1, "", "set_dim"], [1, 4, 1, "", "training"]], "MLSCAlib.Architectures.torch_models.MLP_ASCAD": [[1, 3, 1, "", "forward"], [1, 3, 1, "", "set_dim"], [1, 4, 1, "", "training"]], "MLSCAlib.Architectures.torch_models.MLPexp": [[1, 3, 1, "", "eval"], [1, 3, 1, "", "forward"], [1, 3, 1, "", "set_dim"], [1, 4, 1, "", "training"]], "MLSCAlib.Architectures.torch_models.MaskingLayer": [[1, 3, 1, "", "__init__"], [1, 3, 1, "", "forward"], [1, 3, 1, "", "train"], [1, 4, 1, "", "training"]], "MLSCAlib.Architectures.torch_models.MeshNN": [[1, 3, 1, "", "forward"], [1, 3, 1, "", "set_dim"], [1, 4, 1, "", "training"]], "MLSCAlib.Architectures.torch_models.NetAeshd": [[1, 3, 1, "", "forward"], [1, 3, 1, "", "set_dim"], [1, 4, 1, "", "training"]], "MLSCAlib.Architectures.torch_models.NoConv_desync0": [[1, 3, 1, "", "forward"], [1, 3, 1, "", "set_dim"], [1, 4, 1, "", "training"]], "MLSCAlib.Architectures.torch_models.NoConv_desync100": [[1, 3, 1, "", "forward"], [1, 3, 1, "", "set_dim"], [1, 4, 1, "", "training"]], "MLSCAlib.Architectures.torch_models.NoConv_desync50": [[1, 3, 1, "", "forward"], [1, 3, 1, "", "set_dim"], [1, 4, 1, "", "training"]], "MLSCAlib.Architectures.torch_models.ResNet": [[1, 3, 1, "", "forward"], [1, 3, 1, "", "set_dim"], [1, 4, 1, "", "training"]], "MLSCAlib.Architectures.torch_models.Simple_AES_RD": [[1, 3, 1, "", "forward"], [1, 3, 1, "", "set_dim"], [1, 4, 1, "", "training"]], "MLSCAlib.Architectures.torch_models.VGG16": [[1, 3, 1, "", "forward"], [1, 3, 1, "", "set_dim"], [1, 4, 1, "", "training"]], "MLSCAlib.Architectures.torch_models.VGGNoise": [[1, 3, 1, "", "forward"], [1, 3, 1, "", "set_dim"], [1, 4, 1, "", "training"]], "MLSCAlib.Attacks": [[2, 0, 0, "-", "attack"], [2, 0, 0, "-", "profiled"], [2, 0, 0, "-", "unprofiled"]], "MLSCAlib.Attacks.attack": [[2, 2, 1, "", "Attack"], [2, 2, 1, "", "SensitivityMode"], [2, 2, 1, "", "TrainingMethods"]], "MLSCAlib.Attacks.attack.Attack": [[2, 3, 1, "", "__init__"], [2, 3, 1, "", "attack_byte"], [2, 3, 1, "", "attack_bytes"], [2, 3, 1, "", "attack_key"], [2, 3, 1, "", "get_GE"], [2, 3, 1, "", "get_GE_from_sensitivity"], [2, 3, 1, "", "get_accuracy"], [2, 3, 1, "", "get_fast_GE"], [2, 3, 1, "", "get_keys_from_probas"], [2, 3, 1, "", "get_keys_from_sensitivity"], [2, 3, 1, "", "get_pruning_percentage"], [2, 3, 1, "", "get_sensitivity_tensors"], [2, 3, 1, "", "set_pruning_percentage"], [2, 3, 1, "", "set_seed"], [2, 3, 1, "", "train_model_default"], [2, 3, 1, "", "train_model_pruning"], [2, 3, 1, "", "turn_output_probas_to_key_proba"]], "MLSCAlib.Attacks.attack.SensitivityMode": [[2, 4, 1, "", "ABSOLUTE_VALUES"], [2, 4, 1, "", "CLASSIC"], [2, 4, 1, "", "GRAD_CAM"], [2, 4, 1, "", "GRAD_CAM_PLUS_PLUS"], [2, 4, 1, "", "ON_RAW_TRACE"]], "MLSCAlib.Attacks.attack.TrainingMethods": [[2, 4, 1, "", "ADVERSARIAL"], [2, 4, 1, "", "CROSS_VALIDATION"], [2, 4, 1, "", "CUSTOM"], [2, 4, 1, "", "DEFAULT"], [2, 4, 1, "", "MIXUP"], [2, 4, 1, "", "PRUNING_GLOBAL"], [2, 4, 1, "", "PRUNING_HALF_EPOCHS_GLOBAL"], [2, 4, 1, "", "PRUNING_HALF_EPOCHS_LOCAL"], [2, 4, 1, "", "PRUNING_LOCAL"]], "MLSCAlib.Attacks.profiled": [[2, 2, 1, "", "Profiled"]], "MLSCAlib.Attacks.profiled.Profiled": [[2, 3, 1, "", "__init__"], [2, 3, 1, "", "attack_byte"], [2, 3, 1, "", "attack_bytes"], [2, 3, 1, "", "get_min_trace_for_GE1"], [2, 3, 1, "", "get_pruning_percentage"], [2, 3, 1, "", "record_attack"], [2, 3, 1, "", "train_model_adversarial"], [2, 3, 1, "", "train_model_cross_validation"], [2, 3, 1, "", "train_model_default"]], "MLSCAlib.Attacks.unprofiled": [[2, 2, 1, "", "UnProfiled"], [2, 1, 1, "", "display_sensi_slider"]], "MLSCAlib.Attacks.unprofiled.UnProfiled": [[2, 3, 1, "", "__init__"], [2, 3, 1, "", "attack_byte"], [2, 3, 1, "", "attack_byte_with_min_traces"], [2, 3, 1, "", "attack_bytes"], [2, 3, 1, "", "attack_bytes_with_min_traces"], [2, 3, 1, "", "get_pruning_percentage"], [2, 3, 1, "", "train_model_adversarial"], [2, 3, 1, "", "train_model_cross_validation"], [2, 3, 1, "", "train_model_default"]], "MLSCAlib.Ciphers": [[3, 0, 0, "-", "AES_leakage"], [3, 0, 0, "-", "leakage_model"]], "MLSCAlib.Ciphers.AES_leakage": [[3, 2, 1, "", "AESLeakageModel"]], "MLSCAlib.Ciphers.AES_leakage.AESLeakageModel": [[3, 3, 1, "", "__init__"], [3, 3, 1, "", "check_key"], [3, 3, 1, "", "get_labelled_output"], [3, 3, 1, "", "get_snr_poi"], [3, 3, 1, "", "get_used_keys"], [3, 3, 1, "", "needs_cipher_and_not_ptx"], [3, 3, 1, "", "recover_input"]], "MLSCAlib.Ciphers.leakage_model": [[3, 2, 1, "", "LeakageModel"]], "MLSCAlib.Ciphers.leakage_model.LeakageModel": [[3, 3, 1, "", "__init__"], [3, 3, 1, "", "check_key"], [3, 3, 1, "", "get_class_balance"], [3, 3, 1, "", "get_classes"], [3, 3, 1, "", "get_imbalanced_classes"], [3, 3, 1, "", "get_labelled_output"], [3, 3, 1, "", "get_same_label_values"], [3, 3, 1, "", "get_small_profiling_labels"], [3, 3, 1, "", "get_snr_poi"], [3, 3, 1, "", "get_type"], [3, 3, 1, "", "get_used_keys"], [3, 3, 1, "", "is_ID"], [3, 3, 1, "", "is_balanced"], [3, 3, 1, "", "label"], [3, 3, 1, "", "needs_cipher_and_not_ptx"], [3, 3, 1, "", "recover_input"], [3, 3, 1, "", "recover_key_byte_hypothesis"]], "MLSCAlib.Data": [[4, 0, 0, "-", "chipwhisperer_converter"], [4, 0, 0, "-", "custom_manager"], [4, 0, 0, "-", "data_manager"]], "MLSCAlib.Data.chipwhisperer_converter": [[4, 2, 1, "", "MockProj"], [4, 2, 1, "", "MockProj2"], [4, 1, 1, "", "save_chip_trace_to_h5"]], "MLSCAlib.Data.custom_manager": [[4, 2, 1, "", "CustomDataManager"], [4, 2, 1, "", "ImbalanceResolution"], [4, 2, 1, "", "NoiseTypes"]], "MLSCAlib.Data.custom_manager.CustomDataManager": [[4, 3, 1, "", "__init__"], [4, 3, 1, "", "add_noise"], [4, 3, 1, "", "append_noise"], [4, 3, 1, "", "apply_LDA"], [4, 3, 1, "", "apply_MA"], [4, 3, 1, "", "apply_PCA"], [4, 3, 1, "", "apply_QDA"], [4, 3, 1, "", "apply_autoencoder"], [4, 3, 1, "", "apply_decimation"], [4, 3, 1, "", "apply_mean_removal"], [4, 3, 1, "", "apply_messerges"], [4, 3, 1, "", "apply_pearson"], [4, 3, 1, "", "get_res_name"], [4, 3, 1, "", "prepare_profiled_data"], [4, 3, 1, "", "prepare_unprofiled_data"], [4, 3, 1, "", "use_synthetic_traces"]], "MLSCAlib.Data.custom_manager.ImbalanceResolution": [[4, 4, 1, "", "NCR_SMOTE"], [4, 4, 1, "", "NEIGHBOURHOOD_CLEANING_RULE"], [4, 4, 1, "", "NONE"], [4, 4, 1, "", "ONESIDED_SELECTION"], [4, 4, 1, "", "OSS_SMOTE"], [4, 4, 1, "", "RANDOM_UNDERSAMPLER"], [4, 4, 1, "", "SMOTE"], [4, 4, 1, "", "SMOTE_TOMEK"]], "MLSCAlib.Data.custom_manager.NoiseTypes": [[4, 4, 1, "", "CLOCK_JITTER"], [4, 4, 1, "", "GAUSSIAN"], [4, 4, 1, "", "MA"], [4, 4, 1, "", "RANDOM_DELAY"], [4, 4, 1, "", "SHUFFLING"], [4, 4, 1, "", "SHUFFLING_VARIANT"]], "MLSCAlib.Data.data_manager": [[4, 2, 1, "", "DataManager"], [4, 2, 1, "", "PreProcessing"], [4, 1, 1, "", "get_a_free_gpu"]], "MLSCAlib.Data.data_manager.DataManager": [[4, 3, 1, "", "__init__"], [4, 3, 1, "", "get_check_data"], [4, 3, 1, "", "get_ns"], [4, 3, 1, "", "get_res_name"], [4, 5, 1, "", "ns"], [4, 3, 1, "", "pre_process_data"], [4, 3, 1, "", "prepare_profiled_data"], [4, 3, 1, "", "prepare_unprofiled_data"], [4, 3, 1, "", "set_device"], [4, 3, 1, "", "set_seed"], [4, 3, 1, "", "tensor_to_numpy"]], "MLSCAlib.Data.data_manager.PreProcessing": [[4, 4, 1, "", "HORIZONTAL_STANDARDIZATION"], [4, 4, 1, "", "REMOVE_MEAN_SCALE_0_1"], [4, 4, 1, "", "REMOVE_MEAN_SCALE_1_1"], [4, 4, 1, "", "SCALE_0_1"], [4, 4, 1, "", "SCALE_1_1"]], "MLSCAlib": [[0, 0, 0, "-", "main"]], "MLSCAlib.main": [[0, 1, 1, "", "script_parser"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "titleterms": {"mlscalib": [0, 1, 2, 3, 4, 5, 6], "packag": [0, 1, 2, 3, 4], "subpackag": 0, "submodul": [0, 1, 2, 3, 4], "main": 0, "modul": [0, 1, 2, 3, 4], "architectur": 1, "autoencod": 1, "torch_model": 1, "attack": 2, "unprofil": 2, "profil": 2, "cipher": 3, "aes_leakag": 3, "leakage_model": 3, "data": 4, "chipwhisperer_convert": 4, "data_manag": 4, "custom_manag": 4, "welcom": 5, "": 5, "document": 5, "content": 5, "indic": 5, "tabl": 5}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinxcontrib.bibtex": 9, "sphinx": 57}, "alltitles": {"MLSCAlib package": [[0, "mlscalib-package"]], "Subpackages": [[0, "subpackages"]], "Submodules": [[0, "submodules"], [1, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"]], "MLSCAlib.main module": [[0, "module-MLSCAlib.main"]], "MLSCAlib.Architectures package": [[1, "mlscalib-architectures-package"]], "MLSCAlib.Architectures.autoencoders module": [[1, "module-MLSCAlib.Architectures.autoencoders"]], "MLSCAlib.Architectures.torch_models module": [[1, "module-MLSCAlib.Architectures.torch_models"]], "MLSCAlib.Attacks package": [[2, "mlscalib-attacks-package"]], "MLSCAlib.Attacks.attack module": [[2, "module-MLSCAlib.Attacks.attack"]], "MLSCAlib.Attacks.unprofiled module": [[2, "module-MLSCAlib.Attacks.unprofiled"]], "MLSCAlib.Attacks.profiled module": [[2, "module-MLSCAlib.Attacks.profiled"]], "MLSCAlib.Ciphers package": [[3, "mlscalib-ciphers-package"]], "MLSCAlib.Ciphers.AES_leakage module": [[3, "module-MLSCAlib.Ciphers.AES_leakage"]], "MLSCAlib.Ciphers.leakage_model module": [[3, "module-MLSCAlib.Ciphers.leakage_model"]], "MLSCAlib.Data package": [[4, "mlscalib-data-package"]], "MLSCAlib.Data.chipwhisperer_converter module": [[4, "module-MLSCAlib.Data.chipwhisperer_converter"]], "MLSCAlib.Data.data_manager module": [[4, "module-MLSCAlib.Data.data_manager"]], "MLSCAlib.Data.custom_manager module": [[4, "module-MLSCAlib.Data.custom_manager"]], "Welcome to MLSCAlib\u2019s documentation!": [[5, "welcome-to-mlscalib-s-documentation"]], "Contents:": [[5, null]], "Indices and tables": [[5, "indices-and-tables"]], "MLSCAlib": [[6, "mlscalib"]]}, "indexentries": {"mlscalib.main": [[0, "module-MLSCAlib.main"]], "module": [[0, "module-MLSCAlib.main"], [1, "module-MLSCAlib.Architectures.autoencoders"], [1, "module-MLSCAlib.Architectures.torch_models"], [2, "module-MLSCAlib.Attacks.attack"], [2, "module-MLSCAlib.Attacks.profiled"], [2, "module-MLSCAlib.Attacks.unprofiled"], [3, "module-MLSCAlib.Ciphers.AES_leakage"], [3, "module-MLSCAlib.Ciphers.leakage_model"], [4, "module-MLSCAlib.Data.chipwhisperer_converter"], [4, "module-MLSCAlib.Data.custom_manager"], [4, "module-MLSCAlib.Data.data_manager"]], "script_parser() (in module mlscalib.main)": [[0, "MLSCAlib.main.script_parser"]], "agnosticmodel (class in mlscalib.architectures.torch_models)": [[1, "MLSCAlib.Architectures.torch_models.AgnosticModel"]], "cnn_mpp16 (class in mlscalib.architectures.torch_models)": [[1, "MLSCAlib.Architectures.torch_models.CNN_MPP16"]], "cnn_zaid_desync0 (class in mlscalib.architectures.torch_models)": [[1, "MLSCAlib.Architectures.torch_models.CNN_zaid_desync0"]], "cnn_zaid_desync100 (class in mlscalib.architectures.torch_models)": [[1, "MLSCAlib.Architectures.torch_models.CNN_zaid_desync100"]], "cnn_zaid_desync50 (class in mlscalib.architectures.torch_models)": [[1, "MLSCAlib.Architectures.torch_models.CNN_zaid_desync50"]], "cnnbest (class in mlscalib.architectures.torch_models)": [[1, "MLSCAlib.Architectures.torch_models.CNNbest"]], "cnnexp (class in mlscalib.architectures.torch_models)": [[1, "MLSCAlib.Architectures.torch_models.CNNexp"]], "mcnn (class in mlscalib.architectures.torch_models)": [[1, "MLSCAlib.Architectures.torch_models.MCNN"]], "mlp (class in mlscalib.architectures.torch_models)": [[1, "MLSCAlib.Architectures.torch_models.MLP"]], "mlp_aesrd (class in mlscalib.architectures.torch_models)": [[1, "MLSCAlib.Architectures.torch_models.MLP_AESRD"]], "mlp_aesrd_imb (class in mlscalib.architectures.torch_models)": [[1, "MLSCAlib.Architectures.torch_models.MLP_AESRD_IMB"]], "mlp_ascad (class in mlscalib.architectures.torch_models)": [[1, "MLSCAlib.Architectures.torch_models.MLP_ASCAD"]], "mlpexp (class in mlscalib.architectures.torch_models)": [[1, "MLSCAlib.Architectures.torch_models.MLPexp"]], "mlscalib.architectures.autoencoders": [[1, "module-MLSCAlib.Architectures.autoencoders"]], "mlscalib.architectures.torch_models": [[1, "module-MLSCAlib.Architectures.torch_models"]], "maskinglayer (class in mlscalib.architectures.torch_models)": [[1, "MLSCAlib.Architectures.torch_models.MaskingLayer"]], "meshnn (class in mlscalib.architectures.torch_models)": [[1, "MLSCAlib.Architectures.torch_models.MeshNN"]], "netaeshd (class in mlscalib.architectures.torch_models)": [[1, "MLSCAlib.Architectures.torch_models.NetAeshd"]], "noconv_desync0 (class in mlscalib.architectures.torch_models)": [[1, "MLSCAlib.Architectures.torch_models.NoConv_desync0"]], "noconv_desync100 (class in mlscalib.architectures.torch_models)": [[1, "MLSCAlib.Architectures.torch_models.NoConv_desync100"]], "noconv_desync50 (class in mlscalib.architectures.torch_models)": [[1, "MLSCAlib.Architectures.torch_models.NoConv_desync50"]], "resnet (class in mlscalib.architectures.torch_models)": [[1, "MLSCAlib.Architectures.torch_models.ResNet"]], "simple_aes_rd (class in mlscalib.architectures.torch_models)": [[1, "MLSCAlib.Architectures.torch_models.Simple_AES_RD"]], "vgg16 (class in mlscalib.architectures.torch_models)": [[1, "MLSCAlib.Architectures.torch_models.VGG16"]], "vggnoise (class in mlscalib.architectures.torch_models)": [[1, "MLSCAlib.Architectures.torch_models.VGGNoise"]], "__init__() (mlscalib.architectures.torch_models.maskinglayer method)": [[1, "MLSCAlib.Architectures.torch_models.MaskingLayer.__init__"]], "eval() (mlscalib.architectures.torch_models.mlpexp method)": [[1, "MLSCAlib.Architectures.torch_models.MLPexp.eval"]], "forward() (mlscalib.architectures.torch_models.agnosticmodel method)": [[1, "MLSCAlib.Architectures.torch_models.AgnosticModel.forward"]], "forward() (mlscalib.architectures.torch_models.cnn_mpp16 method)": [[1, "MLSCAlib.Architectures.torch_models.CNN_MPP16.forward"]], "forward() (mlscalib.architectures.torch_models.cnn_zaid_desync0 method)": [[1, "MLSCAlib.Architectures.torch_models.CNN_zaid_desync0.forward"]], "forward() (mlscalib.architectures.torch_models.cnn_zaid_desync100 method)": [[1, "MLSCAlib.Architectures.torch_models.CNN_zaid_desync100.forward"]], "forward() (mlscalib.architectures.torch_models.cnn_zaid_desync50 method)": [[1, "MLSCAlib.Architectures.torch_models.CNN_zaid_desync50.forward"]], "forward() (mlscalib.architectures.torch_models.cnnbest method)": [[1, "MLSCAlib.Architectures.torch_models.CNNbest.forward"]], "forward() (mlscalib.architectures.torch_models.cnnexp method)": [[1, "MLSCAlib.Architectures.torch_models.CNNexp.forward"]], "forward() (mlscalib.architectures.torch_models.mcnn method)": [[1, "MLSCAlib.Architectures.torch_models.MCNN.forward"]], "forward() (mlscalib.architectures.torch_models.mlp method)": [[1, "MLSCAlib.Architectures.torch_models.MLP.forward"]], "forward() (mlscalib.architectures.torch_models.mlp_aesrd method)": [[1, "MLSCAlib.Architectures.torch_models.MLP_AESRD.forward"]], "forward() (mlscalib.architectures.torch_models.mlp_aesrd_imb method)": [[1, "MLSCAlib.Architectures.torch_models.MLP_AESRD_IMB.forward"]], "forward() (mlscalib.architectures.torch_models.mlp_ascad method)": [[1, "MLSCAlib.Architectures.torch_models.MLP_ASCAD.forward"]], "forward() (mlscalib.architectures.torch_models.mlpexp method)": [[1, "MLSCAlib.Architectures.torch_models.MLPexp.forward"]], "forward() (mlscalib.architectures.torch_models.maskinglayer method)": [[1, "MLSCAlib.Architectures.torch_models.MaskingLayer.forward"]], "forward() (mlscalib.architectures.torch_models.meshnn method)": [[1, "MLSCAlib.Architectures.torch_models.MeshNN.forward"]], "forward() (mlscalib.architectures.torch_models.netaeshd method)": [[1, "MLSCAlib.Architectures.torch_models.NetAeshd.forward"]], "forward() (mlscalib.architectures.torch_models.noconv_desync0 method)": [[1, "MLSCAlib.Architectures.torch_models.NoConv_desync0.forward"]], "forward() (mlscalib.architectures.torch_models.noconv_desync100 method)": [[1, "MLSCAlib.Architectures.torch_models.NoConv_desync100.forward"]], "forward() (mlscalib.architectures.torch_models.noconv_desync50 method)": [[1, "MLSCAlib.Architectures.torch_models.NoConv_desync50.forward"]], "forward() (mlscalib.architectures.torch_models.resnet method)": [[1, "MLSCAlib.Architectures.torch_models.ResNet.forward"]], "forward() (mlscalib.architectures.torch_models.simple_aes_rd method)": [[1, "MLSCAlib.Architectures.torch_models.Simple_AES_RD.forward"]], "forward() (mlscalib.architectures.torch_models.vgg16 method)": [[1, "MLSCAlib.Architectures.torch_models.VGG16.forward"]], "forward() (mlscalib.architectures.torch_models.vggnoise method)": [[1, "MLSCAlib.Architectures.torch_models.VGGNoise.forward"]], "old_cnn() (in module mlscalib.architectures.autoencoders)": [[1, "MLSCAlib.Architectures.autoencoders.old_cnn"]], "set_dim() (mlscalib.architectures.torch_models.agnosticmodel method)": [[1, "MLSCAlib.Architectures.torch_models.AgnosticModel.set_dim"]], "set_dim() (mlscalib.architectures.torch_models.cnn_mpp16 method)": [[1, "MLSCAlib.Architectures.torch_models.CNN_MPP16.set_dim"]], "set_dim() (mlscalib.architectures.torch_models.cnn_zaid_desync0 method)": [[1, "MLSCAlib.Architectures.torch_models.CNN_zaid_desync0.set_dim"]], "set_dim() (mlscalib.architectures.torch_models.cnn_zaid_desync100 method)": [[1, "MLSCAlib.Architectures.torch_models.CNN_zaid_desync100.set_dim"]], "set_dim() (mlscalib.architectures.torch_models.cnn_zaid_desync50 method)": [[1, "MLSCAlib.Architectures.torch_models.CNN_zaid_desync50.set_dim"]], "set_dim() (mlscalib.architectures.torch_models.cnnbest method)": [[1, "MLSCAlib.Architectures.torch_models.CNNbest.set_dim"]], "set_dim() (mlscalib.architectures.torch_models.cnnexp method)": [[1, "MLSCAlib.Architectures.torch_models.CNNexp.set_dim"]], "set_dim() (mlscalib.architectures.torch_models.mcnn method)": [[1, "MLSCAlib.Architectures.torch_models.MCNN.set_dim"]], "set_dim() (mlscalib.architectures.torch_models.mlp method)": [[1, "MLSCAlib.Architectures.torch_models.MLP.set_dim"]], "set_dim() (mlscalib.architectures.torch_models.mlp_aesrd method)": [[1, "MLSCAlib.Architectures.torch_models.MLP_AESRD.set_dim"]], "set_dim() (mlscalib.architectures.torch_models.mlp_aesrd_imb method)": [[1, "MLSCAlib.Architectures.torch_models.MLP_AESRD_IMB.set_dim"]], "set_dim() (mlscalib.architectures.torch_models.mlp_ascad method)": [[1, "MLSCAlib.Architectures.torch_models.MLP_ASCAD.set_dim"]], "set_dim() (mlscalib.architectures.torch_models.mlpexp method)": [[1, "MLSCAlib.Architectures.torch_models.MLPexp.set_dim"]], "set_dim() (mlscalib.architectures.torch_models.meshnn method)": [[1, "MLSCAlib.Architectures.torch_models.MeshNN.set_dim"]], "set_dim() (mlscalib.architectures.torch_models.netaeshd method)": [[1, "MLSCAlib.Architectures.torch_models.NetAeshd.set_dim"]], "set_dim() (mlscalib.architectures.torch_models.noconv_desync0 method)": [[1, "MLSCAlib.Architectures.torch_models.NoConv_desync0.set_dim"]], "set_dim() (mlscalib.architectures.torch_models.noconv_desync100 method)": [[1, "MLSCAlib.Architectures.torch_models.NoConv_desync100.set_dim"]], "set_dim() (mlscalib.architectures.torch_models.noconv_desync50 method)": [[1, "MLSCAlib.Architectures.torch_models.NoConv_desync50.set_dim"]], "set_dim() (mlscalib.architectures.torch_models.resnet method)": [[1, "MLSCAlib.Architectures.torch_models.ResNet.set_dim"]], "set_dim() (mlscalib.architectures.torch_models.simple_aes_rd method)": [[1, "MLSCAlib.Architectures.torch_models.Simple_AES_RD.set_dim"]], "set_dim() (mlscalib.architectures.torch_models.vgg16 method)": [[1, "MLSCAlib.Architectures.torch_models.VGG16.set_dim"]], "set_dim() (mlscalib.architectures.torch_models.vggnoise method)": [[1, "MLSCAlib.Architectures.torch_models.VGGNoise.set_dim"]], "train() (mlscalib.architectures.torch_models.maskinglayer method)": [[1, "MLSCAlib.Architectures.torch_models.MaskingLayer.train"]], "training (mlscalib.architectures.torch_models.agnosticmodel attribute)": [[1, "MLSCAlib.Architectures.torch_models.AgnosticModel.training"]], "training (mlscalib.architectures.torch_models.cnn_mpp16 attribute)": [[1, "MLSCAlib.Architectures.torch_models.CNN_MPP16.training"]], "training (mlscalib.architectures.torch_models.cnn_zaid_desync0 attribute)": [[1, "MLSCAlib.Architectures.torch_models.CNN_zaid_desync0.training"]], "training (mlscalib.architectures.torch_models.cnn_zaid_desync100 attribute)": [[1, "MLSCAlib.Architectures.torch_models.CNN_zaid_desync100.training"]], "training (mlscalib.architectures.torch_models.cnn_zaid_desync50 attribute)": [[1, "MLSCAlib.Architectures.torch_models.CNN_zaid_desync50.training"]], "training (mlscalib.architectures.torch_models.cnnbest attribute)": [[1, "MLSCAlib.Architectures.torch_models.CNNbest.training"]], "training (mlscalib.architectures.torch_models.cnnexp attribute)": [[1, "MLSCAlib.Architectures.torch_models.CNNexp.training"]], "training (mlscalib.architectures.torch_models.mcnn attribute)": [[1, "MLSCAlib.Architectures.torch_models.MCNN.training"]], "training (mlscalib.architectures.torch_models.mlp attribute)": [[1, "MLSCAlib.Architectures.torch_models.MLP.training"]], "training (mlscalib.architectures.torch_models.mlp_aesrd attribute)": [[1, "MLSCAlib.Architectures.torch_models.MLP_AESRD.training"]], "training (mlscalib.architectures.torch_models.mlp_aesrd_imb attribute)": [[1, "MLSCAlib.Architectures.torch_models.MLP_AESRD_IMB.training"]], "training (mlscalib.architectures.torch_models.mlp_ascad attribute)": [[1, "MLSCAlib.Architectures.torch_models.MLP_ASCAD.training"]], "training (mlscalib.architectures.torch_models.mlpexp attribute)": [[1, "MLSCAlib.Architectures.torch_models.MLPexp.training"]], "training (mlscalib.architectures.torch_models.maskinglayer attribute)": [[1, "MLSCAlib.Architectures.torch_models.MaskingLayer.training"]], "training (mlscalib.architectures.torch_models.meshnn attribute)": [[1, "MLSCAlib.Architectures.torch_models.MeshNN.training"]], "training (mlscalib.architectures.torch_models.netaeshd attribute)": [[1, "MLSCAlib.Architectures.torch_models.NetAeshd.training"]], "training (mlscalib.architectures.torch_models.noconv_desync0 attribute)": [[1, "MLSCAlib.Architectures.torch_models.NoConv_desync0.training"]], "training (mlscalib.architectures.torch_models.noconv_desync100 attribute)": [[1, "MLSCAlib.Architectures.torch_models.NoConv_desync100.training"]], "training (mlscalib.architectures.torch_models.noconv_desync50 attribute)": [[1, "MLSCAlib.Architectures.torch_models.NoConv_desync50.training"]], "training (mlscalib.architectures.torch_models.resnet attribute)": [[1, "MLSCAlib.Architectures.torch_models.ResNet.training"]], "training (mlscalib.architectures.torch_models.simple_aes_rd attribute)": [[1, "MLSCAlib.Architectures.torch_models.Simple_AES_RD.training"]], "training (mlscalib.architectures.torch_models.vgg16 attribute)": [[1, "MLSCAlib.Architectures.torch_models.VGG16.training"]], "training (mlscalib.architectures.torch_models.vggnoise attribute)": [[1, "MLSCAlib.Architectures.torch_models.VGGNoise.training"]], "absolute_values (mlscalib.attacks.attack.sensitivitymode attribute)": [[2, "MLSCAlib.Attacks.attack.SensitivityMode.ABSOLUTE_VALUES"]], "adversarial (mlscalib.attacks.attack.trainingmethods attribute)": [[2, "MLSCAlib.Attacks.attack.TrainingMethods.ADVERSARIAL"]], "attack (class in mlscalib.attacks.attack)": [[2, "MLSCAlib.Attacks.attack.Attack"]], "classic (mlscalib.attacks.attack.sensitivitymode attribute)": [[2, "MLSCAlib.Attacks.attack.SensitivityMode.CLASSIC"]], "cross_validation (mlscalib.attacks.attack.trainingmethods attribute)": [[2, "MLSCAlib.Attacks.attack.TrainingMethods.CROSS_VALIDATION"]], "custom (mlscalib.attacks.attack.trainingmethods attribute)": [[2, "MLSCAlib.Attacks.attack.TrainingMethods.CUSTOM"]], "default (mlscalib.attacks.attack.trainingmethods attribute)": [[2, "MLSCAlib.Attacks.attack.TrainingMethods.DEFAULT"]], "grad_cam (mlscalib.attacks.attack.sensitivitymode attribute)": [[2, "MLSCAlib.Attacks.attack.SensitivityMode.GRAD_CAM"]], "grad_cam_plus_plus (mlscalib.attacks.attack.sensitivitymode attribute)": [[2, "MLSCAlib.Attacks.attack.SensitivityMode.GRAD_CAM_PLUS_PLUS"]], "mixup (mlscalib.attacks.attack.trainingmethods attribute)": [[2, "MLSCAlib.Attacks.attack.TrainingMethods.MIXUP"]], "mlscalib.attacks.attack": [[2, "module-MLSCAlib.Attacks.attack"]], "mlscalib.attacks.profiled": [[2, "module-MLSCAlib.Attacks.profiled"]], "mlscalib.attacks.unprofiled": [[2, "module-MLSCAlib.Attacks.unprofiled"]], "on_raw_trace (mlscalib.attacks.attack.sensitivitymode attribute)": [[2, "MLSCAlib.Attacks.attack.SensitivityMode.ON_RAW_TRACE"]], "pruning_global (mlscalib.attacks.attack.trainingmethods attribute)": [[2, "MLSCAlib.Attacks.attack.TrainingMethods.PRUNING_GLOBAL"]], "pruning_half_epochs_global (mlscalib.attacks.attack.trainingmethods attribute)": [[2, "MLSCAlib.Attacks.attack.TrainingMethods.PRUNING_HALF_EPOCHS_GLOBAL"]], "pruning_half_epochs_local (mlscalib.attacks.attack.trainingmethods attribute)": [[2, "MLSCAlib.Attacks.attack.TrainingMethods.PRUNING_HALF_EPOCHS_LOCAL"]], "pruning_local (mlscalib.attacks.attack.trainingmethods attribute)": [[2, "MLSCAlib.Attacks.attack.TrainingMethods.PRUNING_LOCAL"]], "profiled (class in mlscalib.attacks.profiled)": [[2, "MLSCAlib.Attacks.profiled.Profiled"]], "sensitivitymode (class in mlscalib.attacks.attack)": [[2, "MLSCAlib.Attacks.attack.SensitivityMode"]], "trainingmethods (class in mlscalib.attacks.attack)": [[2, "MLSCAlib.Attacks.attack.TrainingMethods"]], "unprofiled (class in mlscalib.attacks.unprofiled)": [[2, "MLSCAlib.Attacks.unprofiled.UnProfiled"]], "__init__() (mlscalib.attacks.attack.attack method)": [[2, "MLSCAlib.Attacks.attack.Attack.__init__"]], "__init__() (mlscalib.attacks.profiled.profiled method)": [[2, "MLSCAlib.Attacks.profiled.Profiled.__init__"]], "__init__() (mlscalib.attacks.unprofiled.unprofiled method)": [[2, "MLSCAlib.Attacks.unprofiled.UnProfiled.__init__"]], "attack_byte() (mlscalib.attacks.attack.attack method)": [[2, "MLSCAlib.Attacks.attack.Attack.attack_byte"]], "attack_byte() (mlscalib.attacks.profiled.profiled method)": [[2, "MLSCAlib.Attacks.profiled.Profiled.attack_byte"]], "attack_byte() (mlscalib.attacks.unprofiled.unprofiled method)": [[2, "MLSCAlib.Attacks.unprofiled.UnProfiled.attack_byte"]], "attack_byte_with_min_traces() (mlscalib.attacks.unprofiled.unprofiled method)": [[2, "MLSCAlib.Attacks.unprofiled.UnProfiled.attack_byte_with_min_traces"]], "attack_bytes() (mlscalib.attacks.attack.attack method)": [[2, "MLSCAlib.Attacks.attack.Attack.attack_bytes"]], "attack_bytes() (mlscalib.attacks.profiled.profiled method)": [[2, "MLSCAlib.Attacks.profiled.Profiled.attack_bytes"]], "attack_bytes() (mlscalib.attacks.unprofiled.unprofiled method)": [[2, "MLSCAlib.Attacks.unprofiled.UnProfiled.attack_bytes"]], "attack_bytes_with_min_traces() (mlscalib.attacks.unprofiled.unprofiled method)": [[2, "MLSCAlib.Attacks.unprofiled.UnProfiled.attack_bytes_with_min_traces"]], "attack_key() (mlscalib.attacks.attack.attack method)": [[2, "MLSCAlib.Attacks.attack.Attack.attack_key"]], "display_sensi_slider() (in module mlscalib.attacks.unprofiled)": [[2, "MLSCAlib.Attacks.unprofiled.display_sensi_slider"]], "get_ge() (mlscalib.attacks.attack.attack static method)": [[2, "MLSCAlib.Attacks.attack.Attack.get_GE"]], "get_ge_from_sensitivity() (mlscalib.attacks.attack.attack static method)": [[2, "MLSCAlib.Attacks.attack.Attack.get_GE_from_sensitivity"]], "get_accuracy() (mlscalib.attacks.attack.attack method)": [[2, "MLSCAlib.Attacks.attack.Attack.get_accuracy"]], "get_fast_ge() (mlscalib.attacks.attack.attack method)": [[2, "MLSCAlib.Attacks.attack.Attack.get_fast_GE"]], "get_keys_from_probas() (mlscalib.attacks.attack.attack static method)": [[2, "MLSCAlib.Attacks.attack.Attack.get_keys_from_probas"]], "get_keys_from_sensitivity() (mlscalib.attacks.attack.attack static method)": [[2, "MLSCAlib.Attacks.attack.Attack.get_keys_from_sensitivity"]], "get_min_trace_for_ge1() (mlscalib.attacks.profiled.profiled static method)": [[2, "MLSCAlib.Attacks.profiled.Profiled.get_min_trace_for_GE1"]], "get_pruning_percentage() (mlscalib.attacks.attack.attack method)": [[2, "MLSCAlib.Attacks.attack.Attack.get_pruning_percentage"]], "get_pruning_percentage() (mlscalib.attacks.profiled.profiled method)": [[2, "MLSCAlib.Attacks.profiled.Profiled.get_pruning_percentage"]], "get_pruning_percentage() (mlscalib.attacks.unprofiled.unprofiled method)": [[2, "MLSCAlib.Attacks.unprofiled.UnProfiled.get_pruning_percentage"]], "get_sensitivity_tensors() (mlscalib.attacks.attack.attack method)": [[2, "MLSCAlib.Attacks.attack.Attack.get_sensitivity_tensors"]], "record_attack() (mlscalib.attacks.profiled.profiled method)": [[2, "MLSCAlib.Attacks.profiled.Profiled.record_attack"]], "set_pruning_percentage() (mlscalib.attacks.attack.attack method)": [[2, "MLSCAlib.Attacks.attack.Attack.set_pruning_percentage"]], "set_seed() (mlscalib.attacks.attack.attack method)": [[2, "MLSCAlib.Attacks.attack.Attack.set_seed"]], "train_model_adversarial() (mlscalib.attacks.profiled.profiled method)": [[2, "MLSCAlib.Attacks.profiled.Profiled.train_model_adversarial"]], "train_model_adversarial() (mlscalib.attacks.unprofiled.unprofiled method)": [[2, "MLSCAlib.Attacks.unprofiled.UnProfiled.train_model_adversarial"]], "train_model_cross_validation() (mlscalib.attacks.profiled.profiled method)": [[2, "MLSCAlib.Attacks.profiled.Profiled.train_model_cross_validation"]], "train_model_cross_validation() (mlscalib.attacks.unprofiled.unprofiled method)": [[2, "MLSCAlib.Attacks.unprofiled.UnProfiled.train_model_cross_validation"]], "train_model_default() (mlscalib.attacks.attack.attack method)": [[2, "MLSCAlib.Attacks.attack.Attack.train_model_default"]], "train_model_default() (mlscalib.attacks.profiled.profiled method)": [[2, "MLSCAlib.Attacks.profiled.Profiled.train_model_default"]], "train_model_default() (mlscalib.attacks.unprofiled.unprofiled method)": [[2, "MLSCAlib.Attacks.unprofiled.UnProfiled.train_model_default"]], "train_model_pruning() (mlscalib.attacks.attack.attack method)": [[2, "MLSCAlib.Attacks.attack.Attack.train_model_pruning"]], "turn_output_probas_to_key_proba() (mlscalib.attacks.attack.attack method)": [[2, "MLSCAlib.Attacks.attack.Attack.turn_output_probas_to_key_proba"]], "aesleakagemodel (class in mlscalib.ciphers.aes_leakage)": [[3, "MLSCAlib.Ciphers.AES_leakage.AESLeakageModel"]], "leakagemodel (class in mlscalib.ciphers.leakage_model)": [[3, "MLSCAlib.Ciphers.leakage_model.LeakageModel"]], "mlscalib.ciphers.aes_leakage": [[3, "module-MLSCAlib.Ciphers.AES_leakage"]], "mlscalib.ciphers.leakage_model": [[3, "module-MLSCAlib.Ciphers.leakage_model"]], "__init__() (mlscalib.ciphers.aes_leakage.aesleakagemodel method)": [[3, "MLSCAlib.Ciphers.AES_leakage.AESLeakageModel.__init__"]], "__init__() (mlscalib.ciphers.leakage_model.leakagemodel method)": [[3, "MLSCAlib.Ciphers.leakage_model.LeakageModel.__init__"]], "check_key() (mlscalib.ciphers.aes_leakage.aesleakagemodel method)": [[3, "MLSCAlib.Ciphers.AES_leakage.AESLeakageModel.check_key"]], "check_key() (mlscalib.ciphers.leakage_model.leakagemodel method)": [[3, "MLSCAlib.Ciphers.leakage_model.LeakageModel.check_key"]], "get_class_balance() (mlscalib.ciphers.leakage_model.leakagemodel method)": [[3, "MLSCAlib.Ciphers.leakage_model.LeakageModel.get_class_balance"]], "get_classes() (mlscalib.ciphers.leakage_model.leakagemodel method)": [[3, "MLSCAlib.Ciphers.leakage_model.LeakageModel.get_classes"]], "get_imbalanced_classes() (mlscalib.ciphers.leakage_model.leakagemodel method)": [[3, "MLSCAlib.Ciphers.leakage_model.LeakageModel.get_imbalanced_classes"]], "get_labelled_output() (mlscalib.ciphers.aes_leakage.aesleakagemodel method)": [[3, "MLSCAlib.Ciphers.AES_leakage.AESLeakageModel.get_labelled_output"]], "get_labelled_output() (mlscalib.ciphers.leakage_model.leakagemodel method)": [[3, "MLSCAlib.Ciphers.leakage_model.LeakageModel.get_labelled_output"]], "get_same_label_values() (mlscalib.ciphers.leakage_model.leakagemodel method)": [[3, "MLSCAlib.Ciphers.leakage_model.LeakageModel.get_same_label_values"]], "get_small_profiling_labels() (mlscalib.ciphers.leakage_model.leakagemodel method)": [[3, "MLSCAlib.Ciphers.leakage_model.LeakageModel.get_small_profiling_labels"]], "get_snr_poi() (mlscalib.ciphers.aes_leakage.aesleakagemodel method)": [[3, "MLSCAlib.Ciphers.AES_leakage.AESLeakageModel.get_snr_poi"]], "get_snr_poi() (mlscalib.ciphers.leakage_model.leakagemodel method)": [[3, "MLSCAlib.Ciphers.leakage_model.LeakageModel.get_snr_poi"]], "get_type() (mlscalib.ciphers.leakage_model.leakagemodel method)": [[3, "MLSCAlib.Ciphers.leakage_model.LeakageModel.get_type"]], "get_used_keys() (mlscalib.ciphers.aes_leakage.aesleakagemodel method)": [[3, "MLSCAlib.Ciphers.AES_leakage.AESLeakageModel.get_used_keys"]], "get_used_keys() (mlscalib.ciphers.leakage_model.leakagemodel method)": [[3, "MLSCAlib.Ciphers.leakage_model.LeakageModel.get_used_keys"]], "is_id() (mlscalib.ciphers.leakage_model.leakagemodel method)": [[3, "MLSCAlib.Ciphers.leakage_model.LeakageModel.is_ID"]], "is_balanced() (mlscalib.ciphers.leakage_model.leakagemodel method)": [[3, "MLSCAlib.Ciphers.leakage_model.LeakageModel.is_balanced"]], "label() (mlscalib.ciphers.leakage_model.leakagemodel method)": [[3, "MLSCAlib.Ciphers.leakage_model.LeakageModel.label"]], "needs_cipher_and_not_ptx() (mlscalib.ciphers.aes_leakage.aesleakagemodel method)": [[3, "MLSCAlib.Ciphers.AES_leakage.AESLeakageModel.needs_cipher_and_not_ptx"]], "needs_cipher_and_not_ptx() (mlscalib.ciphers.leakage_model.leakagemodel method)": [[3, "MLSCAlib.Ciphers.leakage_model.LeakageModel.needs_cipher_and_not_ptx"]], "recover_input() (mlscalib.ciphers.aes_leakage.aesleakagemodel method)": [[3, "MLSCAlib.Ciphers.AES_leakage.AESLeakageModel.recover_input"]], "recover_input() (mlscalib.ciphers.leakage_model.leakagemodel method)": [[3, "MLSCAlib.Ciphers.leakage_model.LeakageModel.recover_input"]], "recover_key_byte_hypothesis() (mlscalib.ciphers.leakage_model.leakagemodel method)": [[3, "MLSCAlib.Ciphers.leakage_model.LeakageModel.recover_key_byte_hypothesis"]], "clock_jitter (mlscalib.data.custom_manager.noisetypes attribute)": [[4, "MLSCAlib.Data.custom_manager.NoiseTypes.CLOCK_JITTER"]], "customdatamanager (class in mlscalib.data.custom_manager)": [[4, "MLSCAlib.Data.custom_manager.CustomDataManager"]], "datamanager (class in mlscalib.data.data_manager)": [[4, "MLSCAlib.Data.data_manager.DataManager"]], "gaussian (mlscalib.data.custom_manager.noisetypes attribute)": [[4, "MLSCAlib.Data.custom_manager.NoiseTypes.GAUSSIAN"]], "horizontal_standardization (mlscalib.data.data_manager.preprocessing attribute)": [[4, "MLSCAlib.Data.data_manager.PreProcessing.HORIZONTAL_STANDARDIZATION"]], "imbalanceresolution (class in mlscalib.data.custom_manager)": [[4, "MLSCAlib.Data.custom_manager.ImbalanceResolution"]], "ma (mlscalib.data.custom_manager.noisetypes attribute)": [[4, "MLSCAlib.Data.custom_manager.NoiseTypes.MA"]], "mlscalib.data.chipwhisperer_converter": [[4, "module-MLSCAlib.Data.chipwhisperer_converter"]], "mlscalib.data.custom_manager": [[4, "module-MLSCAlib.Data.custom_manager"]], "mlscalib.data.data_manager": [[4, "module-MLSCAlib.Data.data_manager"]], "mockproj (class in mlscalib.data.chipwhisperer_converter)": [[4, "MLSCAlib.Data.chipwhisperer_converter.MockProj"]], "mockproj2 (class in mlscalib.data.chipwhisperer_converter)": [[4, "MLSCAlib.Data.chipwhisperer_converter.MockProj2"]], "ncr_smote (mlscalib.data.custom_manager.imbalanceresolution attribute)": [[4, "MLSCAlib.Data.custom_manager.ImbalanceResolution.NCR_SMOTE"]], "neighbourhood_cleaning_rule (mlscalib.data.custom_manager.imbalanceresolution attribute)": [[4, "MLSCAlib.Data.custom_manager.ImbalanceResolution.NEIGHBOURHOOD_CLEANING_RULE"]], "none (mlscalib.data.custom_manager.imbalanceresolution attribute)": [[4, "MLSCAlib.Data.custom_manager.ImbalanceResolution.NONE"]], "noisetypes (class in mlscalib.data.custom_manager)": [[4, "MLSCAlib.Data.custom_manager.NoiseTypes"]], "onesided_selection (mlscalib.data.custom_manager.imbalanceresolution attribute)": [[4, "MLSCAlib.Data.custom_manager.ImbalanceResolution.ONESIDED_SELECTION"]], "oss_smote (mlscalib.data.custom_manager.imbalanceresolution attribute)": [[4, "MLSCAlib.Data.custom_manager.ImbalanceResolution.OSS_SMOTE"]], "preprocessing (class in mlscalib.data.data_manager)": [[4, "MLSCAlib.Data.data_manager.PreProcessing"]], "random_delay (mlscalib.data.custom_manager.noisetypes attribute)": [[4, "MLSCAlib.Data.custom_manager.NoiseTypes.RANDOM_DELAY"]], "random_undersampler (mlscalib.data.custom_manager.imbalanceresolution attribute)": [[4, "MLSCAlib.Data.custom_manager.ImbalanceResolution.RANDOM_UNDERSAMPLER"]], "remove_mean_scale_0_1 (mlscalib.data.data_manager.preprocessing attribute)": [[4, "MLSCAlib.Data.data_manager.PreProcessing.REMOVE_MEAN_SCALE_0_1"]], "remove_mean_scale_1_1 (mlscalib.data.data_manager.preprocessing attribute)": [[4, "MLSCAlib.Data.data_manager.PreProcessing.REMOVE_MEAN_SCALE_1_1"]], "scale_0_1 (mlscalib.data.data_manager.preprocessing attribute)": [[4, "MLSCAlib.Data.data_manager.PreProcessing.SCALE_0_1"]], "scale_1_1 (mlscalib.data.data_manager.preprocessing attribute)": [[4, "MLSCAlib.Data.data_manager.PreProcessing.SCALE_1_1"]], "shuffling (mlscalib.data.custom_manager.noisetypes attribute)": [[4, "MLSCAlib.Data.custom_manager.NoiseTypes.SHUFFLING"]], "shuffling_variant (mlscalib.data.custom_manager.noisetypes attribute)": [[4, "MLSCAlib.Data.custom_manager.NoiseTypes.SHUFFLING_VARIANT"]], "smote (mlscalib.data.custom_manager.imbalanceresolution attribute)": [[4, "MLSCAlib.Data.custom_manager.ImbalanceResolution.SMOTE"]], "smote_tomek (mlscalib.data.custom_manager.imbalanceresolution attribute)": [[4, "MLSCAlib.Data.custom_manager.ImbalanceResolution.SMOTE_TOMEK"]], "__init__() (mlscalib.data.custom_manager.customdatamanager method)": [[4, "MLSCAlib.Data.custom_manager.CustomDataManager.__init__"]], "__init__() (mlscalib.data.data_manager.datamanager method)": [[4, "MLSCAlib.Data.data_manager.DataManager.__init__"]], "add_noise() (mlscalib.data.custom_manager.customdatamanager method)": [[4, "MLSCAlib.Data.custom_manager.CustomDataManager.add_noise"]], "append_noise() (mlscalib.data.custom_manager.customdatamanager method)": [[4, "MLSCAlib.Data.custom_manager.CustomDataManager.append_noise"]], "apply_lda() (mlscalib.data.custom_manager.customdatamanager method)": [[4, "MLSCAlib.Data.custom_manager.CustomDataManager.apply_LDA"]], "apply_ma() (mlscalib.data.custom_manager.customdatamanager method)": [[4, "MLSCAlib.Data.custom_manager.CustomDataManager.apply_MA"]], "apply_pca() (mlscalib.data.custom_manager.customdatamanager method)": [[4, "MLSCAlib.Data.custom_manager.CustomDataManager.apply_PCA"]], "apply_qda() (mlscalib.data.custom_manager.customdatamanager method)": [[4, "MLSCAlib.Data.custom_manager.CustomDataManager.apply_QDA"]], "apply_autoencoder() (mlscalib.data.custom_manager.customdatamanager method)": [[4, "MLSCAlib.Data.custom_manager.CustomDataManager.apply_autoencoder"]], "apply_decimation() (mlscalib.data.custom_manager.customdatamanager method)": [[4, "MLSCAlib.Data.custom_manager.CustomDataManager.apply_decimation"]], "apply_mean_removal() (mlscalib.data.custom_manager.customdatamanager method)": [[4, "MLSCAlib.Data.custom_manager.CustomDataManager.apply_mean_removal"]], "apply_messerges() (mlscalib.data.custom_manager.customdatamanager method)": [[4, "MLSCAlib.Data.custom_manager.CustomDataManager.apply_messerges"]], "apply_pearson() (mlscalib.data.custom_manager.customdatamanager method)": [[4, "MLSCAlib.Data.custom_manager.CustomDataManager.apply_pearson"]], "get_a_free_gpu() (in module mlscalib.data.data_manager)": [[4, "MLSCAlib.Data.data_manager.get_a_free_gpu"]], "get_check_data() (mlscalib.data.data_manager.datamanager method)": [[4, "MLSCAlib.Data.data_manager.DataManager.get_check_data"]], "get_ns() (mlscalib.data.data_manager.datamanager method)": [[4, "MLSCAlib.Data.data_manager.DataManager.get_ns"]], "get_res_name() (mlscalib.data.custom_manager.customdatamanager method)": [[4, "MLSCAlib.Data.custom_manager.CustomDataManager.get_res_name"]], "get_res_name() (mlscalib.data.data_manager.datamanager method)": [[4, "MLSCAlib.Data.data_manager.DataManager.get_res_name"]], "ns (mlscalib.data.data_manager.datamanager property)": [[4, "MLSCAlib.Data.data_manager.DataManager.ns"]], "pre_process_data() (mlscalib.data.data_manager.datamanager method)": [[4, "MLSCAlib.Data.data_manager.DataManager.pre_process_data"]], "prepare_profiled_data() (mlscalib.data.custom_manager.customdatamanager method)": [[4, "MLSCAlib.Data.custom_manager.CustomDataManager.prepare_profiled_data"]], "prepare_profiled_data() (mlscalib.data.data_manager.datamanager method)": [[4, "MLSCAlib.Data.data_manager.DataManager.prepare_profiled_data"]], "prepare_unprofiled_data() (mlscalib.data.custom_manager.customdatamanager method)": [[4, "MLSCAlib.Data.custom_manager.CustomDataManager.prepare_unprofiled_data"]], "prepare_unprofiled_data() (mlscalib.data.data_manager.datamanager method)": [[4, "MLSCAlib.Data.data_manager.DataManager.prepare_unprofiled_data"]], "save_chip_trace_to_h5() (in module mlscalib.data.chipwhisperer_converter)": [[4, "MLSCAlib.Data.chipwhisperer_converter.save_chip_trace_to_h5"]], "set_device() (mlscalib.data.data_manager.datamanager method)": [[4, "MLSCAlib.Data.data_manager.DataManager.set_device"]], "set_seed() (mlscalib.data.data_manager.datamanager method)": [[4, "MLSCAlib.Data.data_manager.DataManager.set_seed"]], "tensor_to_numpy() (mlscalib.data.data_manager.datamanager static method)": [[4, "MLSCAlib.Data.data_manager.DataManager.tensor_to_numpy"]], "use_synthetic_traces() (mlscalib.data.custom_manager.customdatamanager method)": [[4, "MLSCAlib.Data.custom_manager.CustomDataManager.use_synthetic_traces"]]}})